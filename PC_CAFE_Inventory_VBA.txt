Private Sub Worksheet_Change(ByVal Target As Range)

Dim Item As String
Dim SearchRange As Range
Dim rFound As Range
Dim answer As Integer

'Don't run the macro if:
'Target is not a single cell:
If Target.Cells.Count > 1 Then Exit Sub
'or Target belongs to the A1.CurrentRegion:
If Not Intersect(Target, Range("A1").CurrentRegion) Is Nothing Then Exit Sub

'Avoid the endless loop:
Application.EnableEvents = False

'Looks for matches from the here first:
Set SearchRange = Range("A1:A" & Range("A1").CurrentRegion.Rows.Count)
    
Item = Target.Value

'Clears the Target:
Target.Value = ""

If Application.WorksheetFunction.CountIf(SearchRange, Item) > 0 Then
'There's a match already:
    Set rFound = Columns(1).Find(What:=Item, After:=Cells(1, 1) _
            , LookIn:=xlValues, LookAt:=xlPart, SearchOrder:=xlByRows _
            , SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    
    'Determines is user wants to add quantity to inventory:
    answer = MsgBox("Would you like to Add to Inventory", vbQuestion + vbYesNo + vbDefaultButton2, "Inventory Quantity Adjustment")
    If answer = vbYes Then
        toAdd = Application.InputBox(prompt:="How Many?", Type:=1)
        
             'Adds answer to the Quantity:
                rFound.Offset(0, 2).Value = rFound.Offset(0, 2).Value + toAdd
        Else
        
                'Confirms subtract from inventory:
        answer = MsgBox("Subtract from Inventory", vbQuestion + vbOKCancel + vbDefaultButton2, "Inventory Quantity Adjustment")
    If answer = vbOK Then
        toRemove = Application.InputBox(prompt:="How Many?", Type:=1)
        
        'Subtracts answer from the inventory:
         rFound.Offset(0, 2).Value = rFound.Offset(0, 2).Value - toRemove
        
        
    End If
        answer = vbCancel
 
   End If
 
 Else
        'Writes the value for the Barcode-list:
Range("A" & SearchRange.Rows.Count + 1).Value = Item

'Looks for the match from sheet "Inventory" column A
    With Sheets("Inventory")
        Set rFound = .Columns(1).Find(What:=Item, After:=.Cells(1, 1) _
                , LookIn:=xlValues, LookAt:=xlPart, SearchOrder:=xlByRows _
                , SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
    
        On Error GoTo 0
    
            If Not rFound Is Nothing Then
'Has user input Product name and specify Quantity Amount :
            Description = Application.InputBox(prompt:="Enter a product Description:", Type:=2)
            Range("B" & SearchRange.Rows.Count + 1).Value = Description
            Quantity = Application.InputBox(prompt:="Enter Product Quantity :", Type:=2)
            Range("C" & SearchRange.Rows.Count + 1).Value = Quantity
            End If
    End With
End If

'Enable the Events again:
Application.EnableEvents = True

End Sub







